<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>rq</string>
		<string>sparql</string>
	</array>
	<key>name</key>
	<string>SPARQL</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string-language-suffixes</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string-datatype-suffixes</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#logic-operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#relative-urls</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#xml-schema-types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#rdf-schema-types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#owl-types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#qnames</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#built-in-functions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#variables</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#boolean-literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#punctuation-operators</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>boolean-literal</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(true|false)</string>
					<key>name</key>
					<string>constant.language.boolean.sparql</string>
				</dict>
			</array>
		</dict>
		<key>built-in-functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([Aa][Bb][Ss])|([Aa][Vv][Gg])|([Bb][Nn][Oo][Dd][Ee])|([Bb][Oo][Uu][Nn][Dd])|([Cc][Ee][Ii][Ll])|([Cc][Oo][Aa][Ll][Ee][Ss][Cc][Ee])|([Cc][Oo][Nn][Cc][Aa][Tt])|([Cc][Oo][Nn][Tt][Aa][Ii][Nn][Ss])|([Cc][Oo][Uu][Nn][Tt])|([Dd][Aa][Tt][Aa][Tt][Yy][Pp][Ee])|([Dd][Aa][Yy])|([Ee][Nn][Cc][Oo][Dd][Ee]_[Ff][Oo][Rr]_[Uu][Rr][Ii])|([Ee][Xx][Ii][Ss][Tt][Ss])|([Ff][Ll][Oo][Oo][Rr])|([Gg][Rr][Oo][Uu][Pp]_[Cc][Oo][Nn][Cc][Aa][Tt])|([Hh][Oo][Uu][Rr][Ss])|([Ii][Ff])|([Ii][Rr][Ii])|([Ii][Ss][Bb][Ll][Aa][Nn][Kk])|([Ii][Ss][Ii][Rr][Ii])|([Ii][Ss][Ll][Ii][Tt][Ee][Rr][Aa][Ll])|([Ii][Ss][Nn][Uu][Mm][Ee][Rr][Ii][Cc])|([Ii][Ss][Uu][Rr][Ii])|([Ll][Aa][Nn][Gg])|([Ll][Aa][Nn][Gg][Mm][Aa][Tt][Cc][Hh][Ee][Ss])|([Ll][Cc][Aa][Ss][Ee])|([Mm][Aa][Xx])|([Mm][Dd]5)|([Mm][Ii][Nn])|([Mm][Ii][Nn][Uu][Tt][Ee][Ss])|([Mm][Oo][Nn][Tt][Hh])|([Nn][Oo][Ww])|([Rr][Aa][Nn][Dd])|([Rr][Ee][Gg][Ee][Xx])|([Rr][Ee][Pp][Ll][Aa][Cc][Ee])|([Rr][Oo][Uu][Nn][Dd])|([Ss][Aa][Mm][Ee][Tt][Ee][Rr][Mm])|([Ss][Aa][Mm][Pp][Ll][Ee])|([Ss][Ee][Cc][Oo][Nn][Dd][Ss])|([Ss][Ee][Pp][Aa][Rr][Aa][Tt][Oo][Rr])|([Ss][Hh][Aa](1|256|384|512))|([Ss][Tt][Rr])|([Ss][Tt][Rr][Aa][Ff][Tt][Ee][Rr])|([Ss][Tt][Rr][Bb][Ee][Ff][Oo][Rr][Ee])|([Ss][Tt][Rr][Dd][Tt])|([Ss][Tt][Rr][Ee][Nn][Dd][Ss])|([Ss][Tt][Rr][Ll][Aa][Nn][Gg])|([Ss][Tt][Rr][Ll][Ee][Nn])|([Ss][Tt][Rr][Ss][Tt][Aa][Rr][Tt][Ss])|([Ss][Tt][Rr][Uu][Uu][Ii][Dd])|([Ss][Uu][Bb][Ss][Tt][Rr])|([Ss][Uu][Mm])|([Tt][Ii][Mm][Ee][Zz][Oo][Nn][Ee])|([Tt][Zz])|([Uu][Cc][Aa][Ss][Ee])|([Uu][Rr][Ii])|([Uu][Uu][Ii][Dd])|([Yy][Ee][Aa][Rr])</string>
					<key>name</key>
					<string>support.function.sparql</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.sparql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#).*$\n?</string>
					<key>name</key>
					<string>comment.line.hash.sparql</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([Aa][Dd][Dd])|([Aa][Ll][Ll])|([Aa][Ss])|([As][Ss][Cc])|([Aa][Ss][Kk])|([Bb][Aa][Ss][Ee])|([Bb][Ii][Nn][Dd])|([Bb][Yy])|([Cc][Ll][Ee][Aa][Rr])|([Cc][Oo][Nn][Ss][Tt][Rr][Uu][Cc][Tt])|([Cc][Oo][Pp][Yy])|([Cc][Rr][Ee][Aa][Tt][Ee])|([Dd][Aa][Tt][Aa])|([Dd][Ee][Ff][Aa][Uu][Ll][Tt])|([Dd][Ee][Ll][Ee][Tt][Ee])|([Dd][Ee][Sc][Cc])|([Dd][Ee][Ss][Cc][Rr][Ii][Bb][Ee])|([Dd][Ii][Ss][Tt][Ii][Nn][Cc][Tt])|([Dd][Rr][Oo][Pp])|([Ff][Ii][Ll][Tt][Ee][Rr])|([Ff][Rr][Oo][Mm])|([Gg][Rr][Aa][Pp][Hh])|([Gg][Rr][Oo][Uu][Pp])|([Hh][Aa][Vv][Ii][Nn][Gg])|([Ii][Nn][Ss][Ee][Rr][Tt])|([Ll][Ii][Mm][Ii][Tt])|([Ll][Oo][Aa][Dd])|([Mm][Ii][Nn][Uu][Ss])|([Mm][Oo][Vv][Ee])|([Nn][Aa][Mm][Ee][Dd])|([Oo][Ff][Ff][Ss][Ee][Tt])|([Oo][Pp][Tt][Ii][Oo][Nn][Aa][Ll])|([Oo][Rr][Dd][Ee][Rr])|([Pp][Rr][Ee][Ff][Ii][Xx])|([Rr][Ee][Dd][Uu][Cc][Ee][Dd])|([Ss][Ee][Ll][Ee][Cc][Tt])|([Ss][Ee][Pp][Aa][Rr][Aa][Tt][Oo][Rr])|([Ss][Ee][Rr][Vv][Ii][Cc][Ee])|([Ss][Ii][Ll][Ee][Nn][Tt])|([Tt][Oo])|([Uu][Nn][Dd][Ee][Ff])|([Uu][Nn][Ii][Oo][Nn])|([Uu][Ss][Ii][Nn][Gg])|([Vv][Aa][Ll][Uu][Ee][Ss])|([Ww][He][Ee][Rr][Ee])|([Ww][Ii][Tt][Hh])</string>
					<key>name</key>
					<string>keyword.other.sparql</string>
				</dict>
			</array>
		</dict>
		<key>logic-operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\|\|)|(&amp;&amp;)|=|(!=)|&lt;|&gt;|(&lt;=)|(&gt;=)|((^|!?\s)IN(!?\s|$))|((^|!?\s)NOT(!?\s|$))|-|\+|\*|/|\!</string>
					<key>name</key>
					<string>keyword.operator.logical.sparql</string>
				</dict>
			</array>
		</dict>
		<key>owl-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>owl:[a-zA-Z]+</string>
					<key>name</key>
					<string>support.type.datatype.owl.sparql</string>
				</dict>
			</array>
		</dict>
		<key>punctuation-operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(;|,|\.|\(|\)|\{|\}|\|)</string>
					<key>name</key>
					<string>keyword.operator.punctuation.sparql</string>
				</dict>
			</array>
		</dict>
		<key>qnames</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>([a-zA-Z][-_a-zA-Z0-9]*)?:([_a-zA-Z][-_a-zA-Z0-9]*)?</string>
					<key>name</key>
					<string>entity.name.other.qname.sparql</string>
				</dict>
			</array>
		</dict>
		<key>rdf-schema-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(rdfs?:[a-zA-Z]+|(^|\s)a(\s|$))</string>
					<key>name</key>
					<string>support.type.datatype.rdf.schema.sparql</string>
				</dict>
			</array>
		</dict>
		<key>relative-urls</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>&lt;</string>
					<key>end</key>
					<string>&gt;</string>
					<key>name</key>
					<string>string.quoted.other.relative.url.sparql</string>
				</dict>
			</array>
		</dict>
		<key>string-datatype-suffixes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\^\^</string>
					<key>name</key>
					<string>keyword.operator.datatype.suffix.sparql</string>
				</dict>
			</array>
		</dict>
		<key>string-language-suffixes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.language.suffix.sparql</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language.suffix.sparql</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?!")(@)([a-z]+(\-[a-z0-9]+)*)</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"""</string>
					<key>end</key>
					<string>"""</string>
					<key>name</key>
					<string>string.quoted.triple.sparql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.sparql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\n</string>
							<key>name</key>
							<string>invalid.string.newline</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.sparql</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>variables</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\?|\$)[-_a-zA-Z0-9]+</string>
					<key>name</key>
					<string>variable.other.sparql</string>
				</dict>
			</array>
		</dict>
		<key>xml-schema-types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>xsd?:[a-z][a-zA-Z]+</string>
					<key>name</key>
					<string>support.type.datatype.schema.sparql</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.sparql</string>
	<key>uuid</key>
	<string>f2f526c8-4fd6-4465-8ef4-0bdd03610d91</string>
</dict>
</plist>
